services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=mongodb://admin:adminpassword@mongo:27017/dashboard?authSource=admin
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=EXAMPLEACESSKEYID
      - AWS_SECRET_ACCESS_KEY=EXAMPLESECRETACCESSKEY
      - AWS_REGION=us-east-1
      - AWS_BUCKETNAME=product-bucket
    depends_on:
      - mongo
      - localstack
    networks:
      - app-network

  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: dashboard
    networks:
      - app-network

  localstack:
    image: localstack/localstack
    container_name: localstack
    restart: always
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - AWS_ACCESS_KEY_ID=EXAMPLEACESSKEYID
      - AWS_SECRET_ACCESS_KEY=EXAMPLESECRETACCESSKEY
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - "./init-s3.sh:/etc/localstack/init/ready.d/init-s3.sh"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "localstack_data:/var/lib/localstack"
    networks:
      - app-network

volumes:
  mongo_data:
  localstack_data:

networks:
  app-network:
    driver: bridge
